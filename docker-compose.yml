# Base on:
#   https://github.com/jacobalberty/unifi-docker
#   https://hub.docker.com/r/pihole/pihole

version: '3.7'
services:
  unifi_mongo:
    image: mongo:3.6
    container_name: unifi_mongo
    networks:
      - unifi
    restart: always
    volumes:
      - unifi_db:/data/db
      - unifi_dbcfg:/data/configdb
  controller:
    image: "jacobalberty/unifi:latest"
    container_name: unifi_controller
    depends_on:
      - unifi_mongo
    init: true
    networks:
      - unifi
    restart: always
    volumes:
      - unifi_dir:/unifi
      - unifi_data:/unifi/data
      - unifi_log:/unifi/log
      - unifi_cert:/unifi/cert
      - unifi_init:/unifi/init.d
      - unifi_run:/var/run/unifi
      # Mount local folder for backups and autobackups
      - ~/unifi_backup:/unifi/data/backup
    user: unifi
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      DB_URI: mongodb://unifi_mongo/unifi
      STATDB_URI: mongodb://unifi_mongo/unifi_stat
      DB_NAME: unifi
    ports:
      - "3478:3478/udp" # STUN
      - "6789:6789/tcp" # Speed test
      - "8080:8080/tcp" # Device/ controller comm.
      - "8443:8443/tcp" # Controller GUI/API as seen in a web browser
      - "8880:8880/tcp" # HTTP portal redirection
      - "8843:8843/tcp" # HTTPS portal redirection
      - "10001:10001/udp" # AP discovery
  unifi_logs:
    image: bash
    container_name: unifi_logs
    depends_on:
      - controller
    command: bash -c 'tail -F /unifi/log/*.log'
    restart: always
    volumes:
      - unifi_log:/unifi/log
  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    networks:
      pihole:
        ipv4_address: 192.168.254.2
    volumes:
      - ./unbound/conf:/opt/unbound/etc/unbound/
    restart: always
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8180:80/tcp"
      - "8143:443/tcp"
    environment:
      - ServerIP=192.168.254.3
      - TZ=$${TIMEZONE}
      - DNS1='192.168.254.2#5053'
      - DNS2=''
      - WEBPASSWORD=${PIHOLE_WEB_PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - '~/pihole/pihole/:/etc/pihole/'
      - '~/pihole/dnsmasq.d/:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    dns:
      - 127.0.0.1
      - 1.1.1.1
    restart: always
    networks:
      pihole:
        ipv4_address: 192.168.254.3
    depends_on: 
       - unbound

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    restart: always
    environment:
      - TZ=${TIMEZONE}
      - ALLOWED_NETWORKS=192.168.0.0/16,172.16.0.0/16
    network_mode: host
    volumes:
      - ~/plex/config:/config
      - ${PLEX_TRANSCODE_DIRECTORY}:/transcode
      - ${MEDIA_DIRECTORY}:/data
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ~/configs/heimdall:/config

  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - TRANSMISSION_WEB_HOME=/combustion-release/
    volumes:
      - ~/configs/transmission:/config
      - ${MEDIA_DIRECTORY}:/downloads
      - ${MEDIA_DIRECTORY}/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: always

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: local.crsib.me
    ports:
      - "19999:19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/configs/portainer:/data

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command: --cleanup
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - URL=local.crsib.me
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - EMAIL=vedenko@gmail.com
    volumes:
      - ./swag:/config
    ports:
      - 443:443
      - 80:80
    restart: always

  authelia:
    image: authelia/authelia:4.21.0
    container_name: authelia
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ~/authelia:/config
    restart: always
volumes:
  unifi_db:
  unifi_dbcfg:
  unifi_data:
  unifi_log:
  unifi_cert:
  unifi_init:
  unifi_dir:
  unifi_run:

networks:
  unifi:
  pihole:
    driver: bridge
    ipam: 
      config: 
        - subnet: 192.168.254.0/29
